最佳集群策略（待测试）：（适用于对写要求较高，缓存不能丢失数据，且不能容忍较长的缓存重建过程的场景）
A为主节点什么也不用，slave-priority 100
B为从节点什么也不用，slave-priority 90
C为从节点开启aof和rdb，slave-priority 0

优势：最大化保证了性能和可用性
劣势：维护成本最高，需要维护人员非常熟悉集群

故障解决方案：
A节点宕机，B节点接替A节点（从节点B的slave-priority比从节点C高），A节点修复后重新以B节点从节点身份加入集群
B节点宕机，修复后重新配置为A节点从节点加入集群
C节点宕机，修复后重新配置为A节点从节点加入集群

集群策略1：（适用于对写要求较高，缓存可以丢失全部数据，且能容忍较长的缓存重建过程的场景）
主节点和从节点什么都不用

优势：集群达到性能最佳
劣势：可用性最差，一旦集群断电，将丢失全部数据，而且需要较长的缓存重建时间

故障解决方案：重启集群


集群策略2：（适用于对写要求较高，缓存数据不能丢失，不能容忍较长的缓存重建过程的场景）
主节点不使用aof和rdb
从节点使用aof和rdb

优势：主节点可以达到最佳性能，从库主要用于数据灾备，不用于故障转移
劣势：主库一旦出现故障切换到从库，可能会导致性能急剧下降，需要人工干预重新调整集群

故障解决方案：主库出现故障后剔除集群重新加入

集群策略3：（适用于对写要求一般，缓存数据不能丢失，不能容忍较长的缓存重建过程的场景）
主节点使用aof，不使用rdb
从节点使用aof和rdb

优势：兼顾性能和可用性，从库可以保证完整的缓存数据
劣势：主节点性能比前者稍差，且从库故障转移时也需要人工干预重新调整

集群策略4：（适用于对读写要求都不高，缓存数据不能丢失，不能容忍较长的缓存重建过程的场景）
主节点和从节点都使用aof和rdb

优势：可用性最高，且从库故障转移后无需人工调整
劣势：性能最差
